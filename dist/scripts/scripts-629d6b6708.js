"use strict";function MainCtrl(e,t){}function LoginCtrl(e,t,r,s,n,o,i,a){function d(){c.loggedIn=!1,c.username="",c.loginData=i.getObject("userinfo","{}"),c.user=t,console.log("user",c.user)}function u(){c.rememberMe&&i.storeObject("userinfo",c.loginData),a.login(c.loginData),o.close()}function l(){console.log("register"),o.open({template:"views/register.html",scope:e,className:"ngdialog-theme-default",controller:"RegisterCtrl"})}var c=this;c.facebookLogin=r,c.googleLogin=s,c.twitterLogin=n,c.doLogin=u,c.openRegister=l,d()}MainCtrl.$inject=["$user","$localStorage"],LoginCtrl.$inject=["$scope","$user","$facebookLogin","$googleLogin","$twitterLogin","ngDialog","$localStorage","AuthService"],angular.module("bonsaiManagerWebApp",["ngResource","ngDialog","ui.router","lbServices","bonsaiManagerWebApp.services"]).config(["$stateProvider","$urlRouterProvider",function(e,t){e.state("app",{url:"/",views:{sidebar:{templateUrl:"views/sidebar.html",controller:"SidebarCtrl",controllerAs:"sidebar"},content:{templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}}}).state("app.bonsaidetail",{url:"detail/:id",views:{"content@":{templateUrl:"views/bonsaidetail.html",controller:"BonsaiDetailCtrl",controllerAs:"detail"}}}).state("app.login",{url:"login",views:{"content@":{templateUrl:"views/login.html",controller:"LoginCtrl"}}}),t.otherwise("/")}]).config(["$httpProvider",function(e){e.interceptors.push(function(){return{request:function(e){return"/"===e.url.charAt(0)&&(e.url="http://localhost:3000"+e.url,console.log("interceptor req url: ",e.url),e.withCredentials=!0),e}}})}]),function(){function e(e,t,r,s,n,o,i){function a(){c.loggedIn=!1,c.username="",c.loginData=n.getObject("userinfo","{}"),c.user=t,console.log("user",c.user)}function d(){o.open({template:"views/login.html",scope:e,className:"ngdialog-theme-default",controller:"LoginCtrl"})}function u(){i.logout(),c.loggedIn=!1,c.username=""}function l(e){return r.is(e)}var c=this;c.openLogin=d,c.logOut=u,s.$on("login:Successful",function(){c.loggedIn=i.isAuthenticated(),c.username=i.getUsername()}),s.$on("registration:Successful",function(){c.loggedIn=i.isAuthenticated(),c.username=i.getUsername()}),c.stateis=l,a()}e.$inject=["$scope","$user","$state","$rootScope","$localStorage","ngDialog","AuthService"],angular.module("bonsaiManagerWebApp").controller("SidebarCtrl",e)}(),angular.module("bonsaiManagerWebApp").controller("MainCtrl",MainCtrl),angular.module("bonsaiManagerWebApp").controller("LoginCtrl",LoginCtrl),function(){function e(e,t,r,s){function n(){t.register(o.registration),r.close()}var o=this;o.user=e,o.register={},o.loginData={},o.doRegister=n}e.$inject=["$user","AuthService","ngDialog","$localStorage"],angular.module("bonsaiManagerWebApp").controller("RegisterCtrl",e)}(),function(){function e(e){var t=this;t.user=e}e.$inject=["$user"],angular.module("bonsaiManagerWebApp").controller("BonsaiDetailCtrl",e)}(),"undefined"!=typeof module&&"undefined"!=typeof exports&&module.exports===exports&&(module.exports="lbServices"),function(e,t,r){function s(e){var t=e.match(/^(?:https?:)?\/\/([^\/]+)/);return t?t[1]:null}var n="/api",o="authorization",i=s(n)||location.host,a=t.module("lbServices",["ngResource"]);a.factory("User",["LoopBackResource","LoopBackAuth","$injector","$q",function(e,t,r,s){var o=e(n+"/Users/:id",{id:"@id"},{prototype$__findById__accessTokens:{params:{fk:"@fk"},url:n+"/Users/:id/accessTokens/:fk",method:"GET"},prototype$__destroyById__accessTokens:{params:{fk:"@fk"},url:n+"/Users/:id/accessTokens/:fk",method:"DELETE"},prototype$__updateById__accessTokens:{params:{fk:"@fk"},url:n+"/Users/:id/accessTokens/:fk",method:"PUT"},prototype$__findById__identities:{params:{fk:"@fk"},url:n+"/Users/:id/identities/:fk",method:"GET"},prototype$__destroyById__identities:{params:{fk:"@fk"},url:n+"/Users/:id/identities/:fk",method:"DELETE"},prototype$__updateById__identities:{params:{fk:"@fk"},url:n+"/Users/:id/identities/:fk",method:"PUT"},prototype$__findById__credentials:{params:{fk:"@fk"},url:n+"/Users/:id/credentials/:fk",method:"GET"},prototype$__destroyById__credentials:{params:{fk:"@fk"},url:n+"/Users/:id/credentials/:fk",method:"DELETE"},prototype$__updateById__credentials:{params:{fk:"@fk"},url:n+"/Users/:id/credentials/:fk",method:"PUT"},prototype$__findById__bonsais:{params:{fk:"@fk"},url:n+"/Users/:id/bonsais/:fk",method:"GET"},prototype$__destroyById__bonsais:{params:{fk:"@fk"},url:n+"/Users/:id/bonsais/:fk",method:"DELETE"},prototype$__updateById__bonsais:{params:{fk:"@fk"},url:n+"/Users/:id/bonsais/:fk",method:"PUT"},prototype$__get__accessTokens:{isArray:!0,url:n+"/Users/:id/accessTokens",method:"GET"},prototype$__create__accessTokens:{url:n+"/Users/:id/accessTokens",method:"POST"},prototype$__delete__accessTokens:{url:n+"/Users/:id/accessTokens",method:"DELETE"},prototype$__count__accessTokens:{url:n+"/Users/:id/accessTokens/count",method:"GET"},prototype$__get__identities:{isArray:!0,url:n+"/Users/:id/identities",method:"GET"},prototype$__create__identities:{url:n+"/Users/:id/identities",method:"POST"},prototype$__delete__identities:{url:n+"/Users/:id/identities",method:"DELETE"},prototype$__count__identities:{url:n+"/Users/:id/identities/count",method:"GET"},prototype$__get__credentials:{isArray:!0,url:n+"/Users/:id/credentials",method:"GET"},prototype$__create__credentials:{url:n+"/Users/:id/credentials",method:"POST"},prototype$__delete__credentials:{url:n+"/Users/:id/credentials",method:"DELETE"},prototype$__count__credentials:{url:n+"/Users/:id/credentials/count",method:"GET"},prototype$__get__bonsais:{isArray:!0,url:n+"/Users/:id/bonsais",method:"GET"},prototype$__create__bonsais:{url:n+"/Users/:id/bonsais",method:"POST"},prototype$__delete__bonsais:{url:n+"/Users/:id/bonsais",method:"DELETE"},prototype$__count__bonsais:{url:n+"/Users/:id/bonsais/count",method:"GET"},create:{url:n+"/Users",method:"POST"},createMany:{isArray:!0,url:n+"/Users",method:"POST"},patchOrCreate:{url:n+"/Users",method:"PATCH"},replaceOrCreate:{url:n+"/Users/replaceOrCreate",method:"POST"},upsertWithWhere:{url:n+"/Users/upsertWithWhere",method:"POST"},exists:{url:n+"/Users/:id/exists",method:"GET"},findById:{url:n+"/Users/:id",method:"GET"},replaceById:{url:n+"/Users/:id/replace",method:"POST"},find:{isArray:!0,url:n+"/Users",method:"GET"},findOne:{url:n+"/Users/findOne",method:"GET"},updateAll:{url:n+"/Users/update",method:"POST"},deleteById:{url:n+"/Users/:id",method:"DELETE"},count:{url:n+"/Users/count",method:"GET"},prototype$patchAttributes:{url:n+"/Users/:id",method:"PATCH"},createChangeStream:{url:n+"/Users/change-stream",method:"POST"},login:{params:{include:"user"},interceptor:{response:function(e){var r=e.data;return t.setUser(r.id,r.userId,r.user),t.rememberMe=e.config.params.rememberMe!==!1,t.save(),e.resource}},url:n+"/Users/login",method:"POST"},logout:{interceptor:{response:function(e){return t.clearUser(),t.clearStorage(),e.resource},responseError:function(e){return t.clearUser(),t.clearStorage(),e.resource}},url:n+"/Users/logout",method:"POST"},prototype$verify:{url:n+"/Users/:id/verify",method:"POST"},confirm:{url:n+"/Users/confirm",method:"GET"},resetPassword:{url:n+"/Users/reset",method:"POST"},changePassword:{url:n+"/Users/change-password",method:"POST"},setPassword:{url:n+"/Users/reset-password",method:"POST"},"::get::UserCredential::user":{url:n+"/UserCredentials/:id/user",method:"GET"},"::get::UserIdentity::user":{url:n+"/UserIdentities/:id/user",method:"GET"},getCurrent:{url:n+"/Users/:id",method:"GET",params:{id:function(){var e=t.currentUserId;return null==e&&(e="__anonymous__"),e}},interceptor:{response:function(e){return t.currentUserData=e.data,e.resource},responseError:function(e){return t.clearUser(),t.clearStorage(),s.reject(e)}},__isGetCurrentUser__:!0}});return o.upsert=o.patchOrCreate,o.updateOrCreate=o.patchOrCreate,o.patchOrCreateWithWhere=o.upsertWithWhere,o.update=o.updateAll,o.destroyById=o.deleteById,o.removeById=o.deleteById,o.updateAttributes=o.prototype$patchAttributes,o.getCachedCurrent=function(){var e=t.currentUserData;return e?new o(e):null},o.isAuthenticated=function(){return null!=this.getCurrentId()},o.getCurrentId=function(){return t.currentUserId},o.modelName="User",o.identities=function(){var e=r.get("UserIdentity"),t=e["::get::User::identities"];return t.apply(o,arguments)},o.identities.count=function(){var e=r.get("UserIdentity"),t=e["::count::User::identities"];return t.apply(o,arguments)},o.identities.create=function(){var e=r.get("UserIdentity"),t=e["::create::User::identities"];return t.apply(o,arguments)},o.identities.createMany=function(){var e=r.get("UserIdentity"),t=e["::createMany::User::identities"];return t.apply(o,arguments)},o.identities.destroyAll=function(){var e=r.get("UserIdentity"),t=e["::delete::User::identities"];return t.apply(o,arguments)},o.identities.destroyById=function(){var e=r.get("UserIdentity"),t=e["::destroyById::User::identities"];return t.apply(o,arguments)},o.identities.findById=function(){var e=r.get("UserIdentity"),t=e["::findById::User::identities"];return t.apply(o,arguments)},o.identities.updateById=function(){var e=r.get("UserIdentity"),t=e["::updateById::User::identities"];return t.apply(o,arguments)},o.credentials=function(){var e=r.get("UserCredential"),t=e["::get::User::credentials"];return t.apply(o,arguments)},o.credentials.count=function(){var e=r.get("UserCredential"),t=e["::count::User::credentials"];return t.apply(o,arguments)},o.credentials.create=function(){var e=r.get("UserCredential"),t=e["::create::User::credentials"];return t.apply(o,arguments)},o.credentials.createMany=function(){var e=r.get("UserCredential"),t=e["::createMany::User::credentials"];return t.apply(o,arguments)},o.credentials.destroyAll=function(){var e=r.get("UserCredential"),t=e["::delete::User::credentials"];return t.apply(o,arguments)},o.credentials.destroyById=function(){var e=r.get("UserCredential"),t=e["::destroyById::User::credentials"];return t.apply(o,arguments)},o.credentials.findById=function(){var e=r.get("UserCredential"),t=e["::findById::User::credentials"];return t.apply(o,arguments)},o.credentials.updateById=function(){var e=r.get("UserCredential"),t=e["::updateById::User::credentials"];return t.apply(o,arguments)},o.bonsais=function(){var e=r.get("Bonsai"),t=e["::get::User::bonsais"];return t.apply(o,arguments)},o.bonsais.count=function(){var e=r.get("Bonsai"),t=e["::count::User::bonsais"];return t.apply(o,arguments)},o.bonsais.create=function(){var e=r.get("Bonsai"),t=e["::create::User::bonsais"];return t.apply(o,arguments)},o.bonsais.createMany=function(){var e=r.get("Bonsai"),t=e["::createMany::User::bonsais"];return t.apply(o,arguments)},o.bonsais.destroyAll=function(){var e=r.get("Bonsai"),t=e["::delete::User::bonsais"];return t.apply(o,arguments)},o.bonsais.destroyById=function(){var e=r.get("Bonsai"),t=e["::destroyById::User::bonsais"];return t.apply(o,arguments)},o.bonsais.findById=function(){var e=r.get("Bonsai"),t=e["::findById::User::bonsais"];return t.apply(o,arguments)},o.bonsais.updateById=function(){var e=r.get("Bonsai"),t=e["::updateById::User::bonsais"];return t.apply(o,arguments)},o}]),a.factory("UserCredential",["LoopBackResource","LoopBackAuth","$injector","$q",function(e,t,r,s){var o=e(n+"/UserCredentials/:id",{id:"@id"},{prototype$__get__user:{url:n+"/UserCredentials/:id/user",method:"GET"},create:{url:n+"/UserCredentials",method:"POST"},createMany:{isArray:!0,url:n+"/UserCredentials",method:"POST"},patchOrCreate:{url:n+"/UserCredentials",method:"PATCH"},replaceOrCreate:{url:n+"/UserCredentials/replaceOrCreate",method:"POST"},upsertWithWhere:{url:n+"/UserCredentials/upsertWithWhere",method:"POST"},exists:{url:n+"/UserCredentials/:id/exists",method:"GET"},findById:{url:n+"/UserCredentials/:id",method:"GET"},replaceById:{url:n+"/UserCredentials/:id/replace",method:"POST"},find:{isArray:!0,url:n+"/UserCredentials",method:"GET"},findOne:{url:n+"/UserCredentials/findOne",method:"GET"},updateAll:{url:n+"/UserCredentials/update",method:"POST"},deleteById:{url:n+"/UserCredentials/:id",method:"DELETE"},count:{url:n+"/UserCredentials/count",method:"GET"},prototype$patchAttributes:{url:n+"/UserCredentials/:id",method:"PATCH"},createChangeStream:{url:n+"/UserCredentials/change-stream",method:"POST"},"::findById::User::credentials":{params:{fk:"@fk"},url:n+"/Users/:id/credentials/:fk",method:"GET"},"::destroyById::User::credentials":{params:{fk:"@fk"},url:n+"/Users/:id/credentials/:fk",method:"DELETE"},"::updateById::User::credentials":{params:{fk:"@fk"},url:n+"/Users/:id/credentials/:fk",method:"PUT"},"::get::User::credentials":{isArray:!0,url:n+"/Users/:id/credentials",method:"GET"},"::create::User::credentials":{url:n+"/Users/:id/credentials",method:"POST"},"::createMany::User::credentials":{isArray:!0,url:n+"/Users/:id/credentials",method:"POST"},"::delete::User::credentials":{url:n+"/Users/:id/credentials",method:"DELETE"},"::count::User::credentials":{url:n+"/Users/:id/credentials/count",method:"GET"}});return o.upsert=o.patchOrCreate,o.updateOrCreate=o.patchOrCreate,o.patchOrCreateWithWhere=o.upsertWithWhere,o.update=o.updateAll,o.destroyById=o.deleteById,o.removeById=o.deleteById,o.updateAttributes=o.prototype$patchAttributes,o.modelName="UserCredential",o.user=function(){var e=r.get("User"),t=e["::get::UserCredential::user"];return t.apply(o,arguments)},o}]),a.factory("UserIdentity",["LoopBackResource","LoopBackAuth","$injector","$q",function(e,t,r,s){var o=e(n+"/UserIdentities/:id",{id:"@id"},{prototype$__get__user:{url:n+"/UserIdentities/:id/user",method:"GET"},create:{url:n+"/UserIdentities",method:"POST"},createMany:{isArray:!0,url:n+"/UserIdentities",method:"POST"},patchOrCreate:{url:n+"/UserIdentities",method:"PATCH"},replaceOrCreate:{url:n+"/UserIdentities/replaceOrCreate",method:"POST"},upsertWithWhere:{url:n+"/UserIdentities/upsertWithWhere",method:"POST"},exists:{url:n+"/UserIdentities/:id/exists",method:"GET"},findById:{url:n+"/UserIdentities/:id",method:"GET"},replaceById:{url:n+"/UserIdentities/:id/replace",method:"POST"},find:{isArray:!0,url:n+"/UserIdentities",method:"GET"},findOne:{url:n+"/UserIdentities/findOne",method:"GET"},updateAll:{url:n+"/UserIdentities/update",method:"POST"},deleteById:{url:n+"/UserIdentities/:id",method:"DELETE"},count:{url:n+"/UserIdentities/count",method:"GET"},prototype$patchAttributes:{url:n+"/UserIdentities/:id",method:"PATCH"},createChangeStream:{url:n+"/UserIdentities/change-stream",method:"POST"},"::findById::User::identities":{params:{fk:"@fk"},url:n+"/Users/:id/identities/:fk",method:"GET"},"::destroyById::User::identities":{params:{fk:"@fk"},url:n+"/Users/:id/identities/:fk",method:"DELETE"},"::updateById::User::identities":{params:{fk:"@fk"},url:n+"/Users/:id/identities/:fk",method:"PUT"},"::get::User::identities":{isArray:!0,url:n+"/Users/:id/identities",method:"GET"},"::create::User::identities":{url:n+"/Users/:id/identities",method:"POST"},"::createMany::User::identities":{isArray:!0,url:n+"/Users/:id/identities",method:"POST"},"::delete::User::identities":{url:n+"/Users/:id/identities",method:"DELETE"},"::count::User::identities":{url:n+"/Users/:id/identities/count",method:"GET"}});return o.upsert=o.patchOrCreate,o.updateOrCreate=o.patchOrCreate,o.patchOrCreateWithWhere=o.upsertWithWhere,o.update=o.updateAll,o.destroyById=o.deleteById,o.removeById=o.deleteById,o.updateAttributes=o.prototype$patchAttributes,o.modelName="UserIdentity",o.user=function(){var e=r.get("User"),t=e["::get::UserIdentity::user"];return t.apply(o,arguments)},o}]),a.factory("Bonsai",["LoopBackResource","LoopBackAuth","$injector","$q",function(e,t,r,s){var o=e(n+"/Bonsais/:id",{id:"@id"},{create:{url:n+"/Bonsais",method:"POST"},createMany:{isArray:!0,url:n+"/Bonsais",method:"POST"},patchOrCreate:{url:n+"/Bonsais",method:"PATCH"},replaceOrCreate:{url:n+"/Bonsais/replaceOrCreate",method:"POST"},upsertWithWhere:{url:n+"/Bonsais/upsertWithWhere",method:"POST"},exists:{url:n+"/Bonsais/:id/exists",method:"GET"},findById:{url:n+"/Bonsais/:id",method:"GET"},replaceById:{url:n+"/Bonsais/:id/replace",method:"POST"},find:{isArray:!0,url:n+"/Bonsais",method:"GET"},findOne:{url:n+"/Bonsais/findOne",method:"GET"},updateAll:{url:n+"/Bonsais/update",method:"POST"},deleteById:{url:n+"/Bonsais/:id",method:"DELETE"},count:{url:n+"/Bonsais/count",method:"GET"},prototype$patchAttributes:{url:n+"/Bonsais/:id",method:"PATCH"},createChangeStream:{url:n+"/Bonsais/change-stream",method:"POST"},"::findById::User::bonsais":{params:{fk:"@fk"},url:n+"/Users/:id/bonsais/:fk",method:"GET"},"::destroyById::User::bonsais":{params:{fk:"@fk"},url:n+"/Users/:id/bonsais/:fk",method:"DELETE"},"::updateById::User::bonsais":{params:{fk:"@fk"},url:n+"/Users/:id/bonsais/:fk",method:"PUT"},"::get::User::bonsais":{isArray:!0,url:n+"/Users/:id/bonsais",method:"GET"},"::create::User::bonsais":{url:n+"/Users/:id/bonsais",method:"POST"},"::createMany::User::bonsais":{isArray:!0,url:n+"/Users/:id/bonsais",method:"POST"},"::delete::User::bonsais":{url:n+"/Users/:id/bonsais",method:"DELETE"},"::count::User::bonsais":{url:n+"/Users/:id/bonsais/count",method:"GET"}});return o.upsert=o.patchOrCreate,o.updateOrCreate=o.patchOrCreate,o.patchOrCreateWithWhere=o.upsertWithWhere,o.update=o.updateAll,o.destroyById=o.deleteById,o.removeById=o.deleteById,o.updateAttributes=o.prototype$patchAttributes,o.modelName="Bonsai",o}]),a.factory("LoopBackAuth",function(){function e(){var e=this;s.forEach(function(t){e[t]=r(t)}),this.currentUserData=null}function t(e,t,r){try{var s=n+t;null==r&&(r=""),e[s]=r}catch(o){console.log("Cannot access local/session storage:",o)}}function r(e){var t=n+e;return localStorage[t]||sessionStorage[t]||null}var s=["accessTokenId","currentUserId","rememberMe"],n="$LoopBack$";return e.prototype.save=function(){var e=this,r=this.rememberMe?localStorage:sessionStorage;s.forEach(function(s){t(r,s,e[s])})},e.prototype.setUser=function(e,t,r){this.accessTokenId=e,this.currentUserId=t,this.currentUserData=r},e.prototype.clearUser=function(){this.accessTokenId=null,this.currentUserId=null,this.currentUserData=null},e.prototype.clearStorage=function(){s.forEach(function(e){t(sessionStorage,e,null),t(localStorage,e,null)})},new e}).config(["$httpProvider",function(e){e.interceptors.push("LoopBackAuthRequestInterceptor")}]).factory("LoopBackAuthRequestInterceptor",["$q","LoopBackAuth",function(e,t){return{request:function(n){var a=s(n.url);if(a&&a!==i)return n;if(t.accessTokenId)n.headers[o]=t.accessTokenId;else if(n.__isGetCurrentUser__){var d={body:{error:{status:401}},status:401,config:n,headers:function(){return r}};return e.reject(d)}return n||e.when(n)}}}]).provider("LoopBackResource",function(){this.setAuthHeader=function(e){o=e},this.getAuthHeader=function(){return o},this.setUrlBase=function(e){n=e,i=s(n)||location.host},this.getUrlBase=function(){return n},this.$get=["$resource",function(e){var t=function(t,r,s){var n=e(t,r,s);return n.prototype.$save=function(e,t){var r=n.upsert.call(this,{},this,e,t);return r.$promise||r},n};return t.getUrlBase=function(){return n},t.getAuthHeader=function(){return o},t}]})}(window,window.angular),angular.module("bonsaiManagerWebApp.services",[]).factory("$user",["User",function(e){var t={};return t.load=function(){e.findById({id:"me"},function(e){t.data=e})},t.load(),t}]).factory("$facebookLogin",["$user",function(e){return function(){var t="http://localhost:3000/auth/facebook",r=window.open(t,"_self","location=no");if(window.cordova)r.addEventListener("loadstop",function(t){t.url.indexOf("/auth/facebook/callback")!==-1&&(r.close(),e.load())});else var s=setInterval(function(){r.closed&&(e.load(),clearInterval(s))},100)}}]).factory("$googleLogin",["$user",function(e){return function(){var t="https://bonsai-manager.mybluemix.net/auth/google",r=window.open(t,"_self","location=no");if(window.cordova)r.addEventListener("loadstop",function(t){t.url.indexOf("/auth/google/callback")!==-1&&(r.close(),e.load())});else var s=setInterval(function(){r.closed&&(e.load(),clearInterval(s))},100)}}]).factory("$twitterLogin",["$user",function(e){return function(){var t="https://bonsai-manager.mybluemix.net/auth/twitter",r=window.open(t,"_self","location=no");if(window.cordova)r.addEventListener("loadstop",function(t){t.url.indexOf("/auth/twitter/callback")!==-1&&(r.close(),e.load())});else var s=setInterval(function(){r.closed&&(e.load(),clearInterval(s))},100)}}]),angular.module("bonsaiManagerWebApp").factory("AuthService",["User","$q","$rootScope","ngDialog",function(e,t,r,s){function n(t){return e.login(t).$promise.then(function(e){r.currentUser={id:e.user.id,tokenId:e.id,username:t.username},r.$broadcast("login:Successful")},function(e){var t='                            <div class="ngdialog-message">                            <div><h3>Login Unsuccessful</h3></div><div><p>'+e.data.error.message+"</p><p>"+e.data.error.name+'</p></div><div class="ngdialog-buttons">                                <button type="button" class="ngdialog-button ngdialog-button-primary" ng-click=confirm("OK")>OK</button>                            </div>';s.openConfirm({template:t,plain:"true"})})}function o(){return r.currentUser}function i(){return r.currentUser.username}function a(){return e.logout().$promise.then(function(){r.currentUser=null})}function d(t){return e.create({username:t.username,email:t.email,password:t.password}).$promise.then(function(e){},function(e){var t='                <div class="ngdialog-message">                <div><h3>Registration Unsuccessful</h3></div><div><p>'+e.data.error.message+"</p><p>"+e.data.error.name+"</p></div>";s.openConfirm({template:t,plain:"true"})})}return{login:n,logout:a,register:d,isAuthenticated:o,getUsername:i}}]).factory("$localStorage",["$window",function(e){return{store:function(t,r){e.localStorage[t]=r},get:function(t,r){return e.localStorage[t]||r},remove:function(t){e.localStorage.removeItem(t)},storeObject:function(t,r){e.localStorage[t]=JSON.stringify(r)},getObject:function(t,r){return JSON.parse(e.localStorage[t]||r)}}}]);